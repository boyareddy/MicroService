<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
	</parent>
	<groupId>com.roche.connect</groupId>
	<artifactId>TTV2_Simulator</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<pas.version>4.4</pas.version>
		<spring-security.version>4.2.4.RELEASE</spring-security.version>
		<hibernate.version>5.0.12.Final</hibernate.version>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.hcl.hmtp.application.templates</groupId>
			<artifactId>api-application-template-server</artifactId>
			<version>${pas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-data-rest</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.18</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.18</version>
		</dependency>
		
		<dependency>
    		<groupId>com.rabbitmq.jms</groupId>
    		<artifactId>rabbitmq-jms</artifactId>
    		<version>1.10.0</version>
		</dependency>

	</dependencies>
	<build>
		<sourceDirectory>.</sourceDirectory>
		<resources>
			<resource>
				<directory>generated-app/entity</directory>
			</resource>
			<resource>
				<directory>generated-app/service</directory>
			</resource>			
			<resource>
				<directory>generated-app</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.yaml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>application.yaml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.roche.connect.ttv2Simulator.ApplicationBoot</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<include>src/main/java/**/*.java</include>
						<include>generated-app/entity/**/*.java</include>
						<include>generated-app/service/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<defaultOutputDirectory>${project.basedir}/generated</defaultOutputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>5.0.12.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<sourceDirectory>${project.basedir}/generated-app/entity</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>5.0.12.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<imageName>${dockerUrl}/${project.artifactId}:${buildno}</imageName>
					<baseImage>java</baseImage>
					<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>
					<serverId>pas-docker</serverId>
					<pushImage>true</pushImage>
					<resources>
						<!-- copy the service's jar file from target into the root directory 
							of the image -->
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.hcl</groupId>
				<artifactId>merge-maven-plugin</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<configuration>
					<internalYamlLocation>${project.basedir}/../common/ttv2Simulator.yaml</internalYamlLocation>
					<externalYamlLocation>${project.basedir}/../common/common.yaml</externalYamlLocation>
					<defaultYamlLocation>${project.basedir}/src/main/resources/application.yaml</defaultYamlLocation>
				</configuration>
				<!--	<executions>
					<execution>
						<goals>
							<goal>touch</goal>
						</goals>
					</execution>
				</executions> -->
			</plugin>
		</plugins>
	</build>
</project>