<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
	</parent>
	<groupId>com.roche.dpcr</groupId>
	<artifactId>adapter-dpcr</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<pas.version>4.4</pas.version>
		<hapi.version>2.3</hapi.version>
		<spring-security.version>4.2.4.RELEASE</spring-security.version>
		<hibernate.version>5.0.12.Final</hibernate.version>
		<java.version>1.8</java.version>
		<mockito.version>2.8.47</mockito.version>
		<powermock.version>1.7.3</powermock.version>
		<sonar.host.url> http://localhost:9000/ </sonar.host.url>		
		<sonar.projectName>adapter-dpcr</sonar.projectName>
		<sonar.exclusions>src/test/java/**/*,**/JMSRabbitMQAppender.java</sonar.exclusions>
		<sonar.binaries>target/classes</sonar.binaries>
		<sonar.tests>src/test/java</sonar.tests>
		<sonar.sources>src/main/java</sonar.sources>
		<sonar.verbose>true</sonar.verbose>
		<jacoco.version>0.7.5.201505241946</jacoco.version>
		<sonar.language>java</sonar.language>
		<sonar.jacoco.reportPaths>target/jacoco.exec,target/failsafe-reports</sonar.jacoco.reportPaths>
		<jacoco.data.file>target/jacoco.exec,target/failsafe-reports</jacoco.data.file>		
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.coverage.exclusions>	**/ApplicationBoot.java,**/RepositoryConfiguration.java,
		**/JMSRabbitMQAppender.java,**/HTTPPOSTAppender.java,**/MessageRouter.java,**/RestClient.java,**/SocketConfiguration.java,
		**/SwaggerConfiguration.java, **/TokenUtils.java,**/DeviceHandlerService.java</sonar.coverage.exclusions>
		<postgres.version>9.6</postgres.version>
        <activiti.version>1.2</activiti.version>
        <rabbitmq.version>3.7</rabbitmq.version> 
	</properties>

	<dependencies>
	
	<dependency>
    <groupId>org.powermock</groupId>
    <artifactId>powermock-core</artifactId>
    <version>${powermock.version}</version>
    <scope>test</scope>
    </dependency>
	<dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-testng</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
   </dependency>
   <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito2</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
   </dependency>
	<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-mina2</artifactId>
			<version>2.19.1</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.roche</groupId>
			<artifactId>common-utils</artifactId>
			<version>3.9</version>
		</dependency>
		<dependency>
			<groupId>ca.uhn.hapi</groupId>
			<artifactId>hapi-base</artifactId>
			<version>${hapi.version}</version>
		</dependency>

		<dependency>
			<groupId>ca.uhn.hapi</groupId>
			<artifactId>hapi-structures-v26</artifactId>
			<version>${hapi.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hcl.hmtp.application.templates</groupId>
			<artifactId>api-application-template-server</artifactId>
			<version>${pas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.13.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.13.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-data-rest</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.18</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.18</version>
		</dependency>

		<dependency>
			<groupId>com.rabbitmq.jms</groupId>
			<artifactId>rabbitmq-jms</artifactId>
			<version>1.10.0</version>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>.</sourceDirectory>
		<resources>
			<resource>
				<directory>generated-app/entity</directory>
			</resource>
			<resource>
				<directory>generated-app/service</directory>
			</resource>
			<resource>
				<directory>generated-app</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.yaml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>application.yaml</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-jar-plugin</artifactId>
			<configuration>
				<archive>
					<manifestEntries>
						<Implementation-Vendor>HCL Technologies</Implementation-Vendor>
						<pas_version>${pas.version}</pas_version>
						<Implementation-Build-Number>${build.number}</Implementation-Build-Number>
						<connect_connectui_version>${project.version}</connect_connectui_version>
						<care_security_version>${pas.version}</care_security_version>
						<care_metadata_version>${pas.version}</care_metadata_version>
						<care_adminAPI_version>${pas.version}</care_adminAPI_version>
						<care_email_version>${pas.version}</care_email_version>
						<care_mailsenderboot_version>${pas.version}</care_mailsenderboot_version>
						<connect_omm_version>${project.version}</connect_omm_version>
						<connect_adm_version>${project.version}</connect_adm_version>
						<connect_amm_version>${project.version}</connect_amm_version>
						<connect_rmm_version>${project.version}</connect_rmm_version>
						<connect_imm_version>${project.version}</connect_imm_version>
						<connect_wfm_version>${project.version}</connect_wfm_version>
						<connect_adaptermp24_version>${project.version}</connect_adaptermp24_version>
						<connect_adapterlp24_version>${project.version}</connect_adapterlp24_version>
						<connect_adaptermp96_version>${project.version}</connect_adaptermp96_version>
						<connect_adapterhtp_version>${project.version}</connect_adapterhtp_version>
						<connect_adapterforte_version>${project.version}</connect_adapterforte_version>
						<connect_adapterdcr_version>${project.version}</connect_adapterdcr_version>
						<external_postgres_version>${postgres.version}</external_postgres_version>
						<external_activiti_version>${activiti.version}</external_activiti_version>
						<external_rabbitmq_version>${rabbitmq.version}</external_rabbitmq_version>
						<external_apachecamel_version>${camel.version}</external_apachecamel_version>
					</manifestEntries>
				</archive>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</configuration>
		</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.roche.dpcr.ApplicationBoot</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<include>src/main/java/**/*.java</include>
						<include>generated-app/entity/**/*.java</include>
						<include>generated-app/service/**/*.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<defaultOutputDirectory>${project.basedir}/generated</defaultOutputDirectory>
				</configuration>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>5.0.12.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.bsc.maven</groupId>
				<artifactId>maven-processor-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<sourceDirectory>${project.basedir}/generated-app/entity</sourceDirectory>
				</configuration>
				<executions>
					<execution>
						<id>process</id>
						<goals>
							<goal>process</goal>
						</goals>
						<phase>generate-sources</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-jpamodelgen</artifactId>
						<version>5.0.12.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<imageName>${dockerUrl}/${project.artifactId}:${buildno}</imageName>
					<baseImage>java</baseImage>
					<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>
					<serverId>pas-docker</serverId>
					<pushImage>true</pushImage>
					<resources>
						<!-- copy the service's jar file from target into the root directory 
							of the image -->
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.hcl</groupId>
				<artifactId>merge-maven-plugin</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<configuration>
					<internalYamlLocation>${project.basedir}/../common/adapter-dpcr.yaml</internalYamlLocation>
					<externalYamlLocation>${project.basedir}/../common/common.yaml</externalYamlLocation>
					<defaultYamlLocation>${project.basedir}/src/main/resources/application.yaml</defaultYamlLocation>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>touch</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		<!-- Runs unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Skips unit tests if the value of skip.unit.tests property is true -->
					<skipTests>${skip.unit.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run -->
					<excludes>
						<exclude>**/*IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Runs integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<!-- Invokes both the integration-test and the verify goals of the Failsafe 
						Maven plugin -->
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Skips integration tests if the value of skip.integration.tests 
								property is true -->
							<skipTests>${skip.integration.tests}</skipTests>
							<includes>
								<include>**/*IT*.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>target/jacoco.exec</destFile>
							<reset>true</reset>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<destFile>target/jacoco.exec</destFile>
							<reset>true</reset>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<destFile>target/jacoco.exec</destFile>
							<reset>true</reset>
							<dataFile>target/jacoco.exec</dataFile>
							<outputDirectory>target/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
					</systemPropertyVariables>
					<destFile>target/jacoco.exec</destFile>
					<append>true</append>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- The Configuration of the development profile -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the development profile is dev, we must set the value of the build.profile.id 
					property to dev. -->
				<build.profile.id>dev</build.profile.id>
				<!-- Only unit tests are run when the development profile is active -->
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<!-- The Configuration of the integration-test profile -->
		<profile>
			<id>integration-test</id>
			<properties>
				<!-- Specifies the build.profile.id property that must be equal than 
					the name of the directory that contains the profile specific configuration 
					file. Because the name of the directory that contains the configuration file 
					of the integration-test profile is integration-test, we must set the value 
					of the build.profile.id property to integration-test. -->
				<build.profile.id>integration-test</build.profile.id>
				<!-- Only integration tests are run when the integration-test profile 
					is active -->
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
	</profiles>
</project>
