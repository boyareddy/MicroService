<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
	</parent>
	<groupId>com.roche.connect</groupId>
	<artifactId>rmm</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<build_number>${Build_Number}</build_number>
		<pas.version>4.4</pas.version>
		<spring-security.version>4.2.4.RELEASE</spring-security.version>
		<hibernate.version>5.0.12.Final</hibernate.version>
		<java.version>1.8</java.version>
		<mockito.version>2.8.47</mockito.version>
		<powermock.version>1.7.3</powermock.version>
		<sonar.host.url> http://localhost:9000/ </sonar.host.url>
		<sonar.projectName>RMM</sonar.projectName>
		<sonar.exclusions>src/test/java/**/*,src/main/java/com/roche/connect/rmm/specifications/**/*,src/main/java/com/roche/connect/rmm/jaxb/**/*,**/JMSRabbitMQAppender.java</sonar.exclusions>
		<sonar.binaries>target/classes</sonar.binaries>
		<sonar.tests>src/test/java</sonar.tests>
		<sonar.sources>src/main/java</sonar.sources>
		<sonar.verbose>true</sonar.verbose>
		<jacoco.version>0.7.5.201505241946</jacoco.version>
		<sonar.language>java</sonar.language>
		<sonar.jacoco.reportPaths>target/jacoco.exec</sonar.jacoco.reportPaths>
		<jacoco.data.file>target/jacoco.exec</jacoco.data.file>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.coverage.exclusions>
			**/ApplicationBootRmm.java,**/RepositoryConfiguration.java,**/SwaggerConfig.java</sonar.coverage.exclusions>
		<postgres.version>9.6</postgres.version>
		<activiti.version>1.2</activiti.version>
		<rabbitmq.version>3.7</rabbitmq.version>
		<camel.version>2.5</camel.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.hcl.hmtp.application.templates</groupId>
			<artifactId>api-application-template-server</artifactId>
			<version>${pas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>websocket-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.websocket</groupId>
			<artifactId>javax-websocket-server-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.13.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.13.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-data-rest</artifactId>
			<version>2.6.1</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>1.5.18</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>1.5.18</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-core</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-testng</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>3.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.roche</groupId>
			<artifactId>common-utils</artifactId>
			<version>3.9</version>
		</dependency>
		<!-- <dependency> <groupId>org.mockito</groupId> <artifactId>mockito-all</artifactId> 
			<version>1.9.5</version> <scope>test</scope> </dependency> -->

		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports</artifactId>
			<version>6.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-support</artifactId>
			<version>2.0.8</version>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.7.js4</version>
		</dependency>
		<dependency>
			<groupId>org.olap4j</groupId>
			<artifactId>olap4j</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.itextpdf</groupId>
			<artifactId>itextpdf</artifactId>
			<version>5.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>1.46</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcmail-jdk15on</artifactId>
			<version>1.46</version>
		</dependency>
		<dependency>
			<groupId>ar.com.fdvs</groupId>
			<artifactId>DynamicJasper</artifactId>
			<version>5.1.1</version>
		</dependency>
	</dependencies>
	<build>
		<sourceDirectory>.</sourceDirectory>
		<resources>
			<resource>
				<directory>generated-app/entity</directory>
			</resource>
			<resource>
				<directory>generated-app/service</directory>
			</resource>
			<resource>
				<directory>generated-app</directory>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application.yaml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>application.yaml</exclude>
				</excludes>
			</resource>
		</resources>
		<!--  <pluginManagement> -->
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifestEntries>
								<Implementation-Vendor>HCL Technologies</Implementation-Vendor>
								<pas_version>${pas.version}</pas_version>
								<Implementation-Build-Number>${build.number}</Implementation-Build-Number>
								<connect_connectui_version>${project.version}</connect_connectui_version>
								<care_security_version>${pas.version}</care_security_version>
								<care_metadata_version>${pas.version}</care_metadata_version>
								<care_adminAPI_version>${pas.version}</care_adminAPI_version>
								<care_email_version>${pas.version}</care_email_version>
								<care_mailsenderboot_version>${pas.version}</care_mailsenderboot_version>
								<connect_omm_version>${project.version}</connect_omm_version>
								<connect_adm_version>${project.version}</connect_adm_version>
								<connect_amm_version>${project.version}</connect_amm_version>
								<connect_rmm_version>${project.version}</connect_rmm_version>
								<connect_imm_version>${project.version}</connect_imm_version>
								<connect_wfm_version>${project.version}</connect_wfm_version>
								<connect_adaptermp24_version>${project.version}</connect_adaptermp24_version>
								<connect_adapterlp24_version>${project.version}</connect_adapterlp24_version>
								<connect_adaptermp96_version>${project.version}</connect_adaptermp96_version>
								<connect_adapterhtp_version>${project.version}</connect_adapterhtp_version>
								<connect_adapterforte_version>${project.version}</connect_adapterforte_version>
								<connect_adapterdcr_version>${project.version}</connect_adapterdcr_version>
								<external_postgres_version>${postgres.version}</external_postgres_version>
								<external_activiti_version>${activiti.version}</external_activiti_version>
								<external_rabbitmq_version>${rabbitmq.version}</external_rabbitmq_version>
								<external_apachecamel_version>${camel.version}</external_apachecamel_version>
							</manifestEntries>
						</archive>
						<excludes>
							<exclude>**/*.java</exclude>
						</excludes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.4.0.905</version>
				</plugin>

				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<mainClass>com.roche.connect.rmm.ApplicationBootRmm</mainClass>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<includes>
							<include>src/main/java/**/*.java</include>
							<include>generated-app/entity/**/*.java</include>
							<include>generated-app/service/**/*.java</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<defaultOutputDirectory>${project.basedir}/generated</defaultOutputDirectory>
					</configuration>
					<executions>
						<execution>
							<id>process</id>
							<goals>
								<goal>process</goal>
							</goals>
							<phase>generate-sources</phase>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>5.0.12.Final</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.bsc.maven</groupId>
					<artifactId>maven-processor-plugin</artifactId>
					<version>2.1.1</version>
					<configuration>
						<sourceDirectory>${project.basedir}/generated-app/entity</sourceDirectory>
					</configuration>
					<executions>
						<execution>
							<id>process</id>
							<goals>
								<goal>process</goal>
							</goals>
							<phase>generate-sources</phase>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.hibernate</groupId>
							<artifactId>hibernate-jpamodelgen</artifactId>
							<version>5.0.12.Final</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<configuration>
						<imageName>${dockerUrl}/${project.artifactId}:${buildno}</imageName>
						<baseImage>java</baseImage>
						<entryPoint>["java","-jar","/${project.build.finalName}.jar"]</entryPoint>
						<serverId>pas-docker</serverId>
						<pushImage>true</pushImage>
						<resources>
							<!-- copy the service's jar file from target into the root directory 
								of the image -->
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.hcl</groupId>
					<artifactId>merge-maven-plugin</artifactId>
					<version>0.0.1-SNAPSHOT</version>
					<configuration>
						<internalYamlLocation>${project.basedir}/../common/rmm.yaml</internalYamlLocation>
						<externalYamlLocation>${project.basedir}/../common/common.yaml</externalYamlLocation>
						<defaultYamlLocation>${project.basedir}/src/main/resources/application.yaml</defaultYamlLocation>
					</configuration>
					<!--<executions> <execution> <goals> <goal>touch</goal> </goals> </execution> 
						</executions> -->
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skipTests>${skip.unit.tests}</skipTests>
						<excludes>
							<exclude>**/*IT*.java</exclude>
						</excludes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<executions>
						<execution>
							<id>integration-tests</id>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
							<configuration>
								<skipTests>${skip.integration.tests}</skipTests>
								<includes>
									<include>**/*IT*.java</include>
								</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<id>prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<destFile>target/jacoco.exec</destFile>
								<reset>true</reset>
								<dataFile>target/jacoco.exec</dataFile>
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<destFile>target/jacoco.exec</destFile>
								<reset>true</reset>
								<dataFile>target/jacoco.exec</dataFile>
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<phase>test</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<destFile>target/jacoco.exec</destFile>
								<reset>true</reset>
								<dataFile>target/jacoco.exec</dataFile>
								<outputDirectory>target/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
						<destFile>target/jacoco.exec</destFile>
						<append>true</append>
					</configuration>
				</plugin>
				<!-- adding plugin for report compilation during build phase -->
				 <!-- <plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jasperreports-maven-plugin</artifactId>
					<version>1.0-beta-2</version>
					<configuration>
						<sourceDirectory>src/main/resources/jasper</sourceDirectory>
						<sourceFileExt>.jrxml</sourceFileExt>
						<outputDirectory>src/main/resources/jasper</outputDirectory>
						<outputFileExt>.jasper</outputFileExt>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>compile-reports</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>jasperreports-maven-plugin</artifactId>
							<version>1.0-beta-2</version>
							<exclusions>
								<exclusion>
									<groupId>jasperreports</groupId>
									<artifactId>jasperreports</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>net.sf.jasperreports</groupId>
							<artifactId>jasperreports</artifactId>
							<version>4.6.0</version>
							<exclusions>
								<exclusion>
									<groupId>commons-logging</groupId>
									<artifactId>commons-logging</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-all</artifactId>
							<version>1.8.6</version>
						</dependency>
					</dependencies>
				</plugin>  -->
				<!-- end of plugin for report compilation during build phase -->
			</plugins>
		<!-- </pluginManagement> -->
	</build>
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<build.profile.id>dev</build.profile.id>
				<skip.integration.tests>true</skip.integration.tests>
				<skip.unit.tests>false</skip.unit.tests>
			</properties>
		</profile>
		<profile>
			<id>integration-test</id>
			<properties>
				<build.profile.id>integration-test</build.profile.id>
				<skip.integration.tests>false</skip.integration.tests>
				<skip.unit.tests>true</skip.unit.tests>
			</properties>
		</profile>
	</profiles>
</project>